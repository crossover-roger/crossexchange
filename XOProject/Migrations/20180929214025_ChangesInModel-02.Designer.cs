// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XOProject;

namespace XOProject.Migrations
{
    [DbContext(typeof(ExchangeContext))]
    [Migration("20180929214025_ChangesInModel-02")]
    partial class ChangesInModel02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XOProject.Portfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("XOProject.Share", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .IsFixedLength(true)
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.HasIndex("Symbol")
                        .IsUnique()
                        .HasName("Share_Symbol_Index");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("XOProject.ShareRates", b =>
                {
                    b.Property<Guid>("ShareId");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ShareId", "TimeStamp");

                    b.ToTable("ShareRates");
                });

            modelBuilder.Entity("XOProject.Trade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Action")
                        .IsRequired();

                    b.Property<Guid?>("PortfolioId");

                    b.Property<int>("Quantity");

                    b.Property<Guid?>("ShareId");

                    b.Property<decimal>("SinglePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)")
                        .HasComputedColumnSql("[SinglePrice]*[Quantity]");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("ShareId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("XOProject.ShareRates", b =>
                {
                    b.HasOne("XOProject.Share")
                        .WithMany("Rates")
                        .HasForeignKey("ShareId")
                        .HasConstraintName("FK_Share_Rate")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("XOProject.Trade", b =>
                {
                    b.HasOne("XOProject.Portfolio", "Portfolio")
                        .WithMany("Trades")
                        .HasForeignKey("PortfolioId");

                    b.HasOne("XOProject.Share", "Share")
                        .WithMany("Trades")
                        .HasForeignKey("ShareId");
                });
#pragma warning restore 612, 618
        }
    }
}
